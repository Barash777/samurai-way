{"version":3,"file":"static/js/938.cc5a3fea.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Paginator/Paginator.module.css?d053","components/Paginator/Paginator.tsx","webpack://samurai-way/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/usersSelectors.ts","components/Users/UsersContainer.tsx","hoc/WithAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pageNumber\":\"Paginator_pageNumber__VYOI0\",\"selectedPage\":\"Paginator_selectedPage__qUXuz\"};","import React, {useState} from 'react';\nimport css from \"./Paginator.module.css\";\n// import {Button} from \"antd\";\n\nexport type PaginatorPropsType = {\n    count: number\n    totalItemsCount: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    portion: number\n}\n\nconst Paginator = ({count, totalItemsCount, currentPage, onPageChanged, portion}: PaginatorPropsType) => {\n\n    const pagesCount = Math.ceil(totalItemsCount / count)\n    const pages = []\n    // for (let i = 1; i <= Math.min(pagesCount, portion); i++) {\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    const portionCount = Math.ceil(totalItemsCount / portion)\n    const [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / portion))\n    const leftPortionNumber = (portionNumber - 1) * portion + 1\n    const rightPortionNumber = portionNumber * portion\n\n    return (\n        <div>\n            {leftPortionNumber > 1 && <button onClick={() => setPortionNumber(prev => prev - 1)}>Back</button>}\n            {pages\n                .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\n                .map(p => <span key={p} onClick={() => onPageChanged(p)}\n                                className={`${css.pageNumber} ${currentPage === p ? css.selectedPage : ''}`}>{p} </span>)}\n            <span> of {pagesCount}</span>\n            {portionCount > portionNumber && <button onClick={() => setPortionNumber(prev => prev + 1)}>Next</button>}\n        </div>\n    );\n};\n\nexport default Paginator;","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"User_avatar__V2sdX\"};","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport defaultAvatar from \"../../../assets/images/default_avatar.png\";\nimport css from \"./User.module.css\";\nimport {UserType} from \"../../../redux/usersReducer\";\n\ntype UserPropsType = {\n    user: UserType\n    followingInProgress: Array<number>\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n}\n\nconst User = ({user, followingInProgress, follow, unfollow}: UserPropsType) => {\n    return (\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small ?? defaultAvatar} className={css.avatar} alt={'avatar'}/>\n                    </NavLink>\n                </div>\n                <div>\n                    <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n\n                        if (!user.followed) {\n                            follow(user.id)\n                        } else {\n                            unfollow(user.id)\n                        }\n\n                    }}>{user.followed ? 'UNFOLLOW' : 'FOLLOW'}</button>\n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>{user.name}</div>\n                    <div>{user.status}</div>\n                </span>\n            </span>\n        </div>\n    );\n};\n\nexport default User;","import React from 'react';\nimport {UserType} from '../../redux/usersReducer';\nimport Paginator from \"../Paginator/Paginator\";\nimport User from \"./User/User\";\n\nexport type UsersPropsType = {\n    // isFetching: boolean\n    users: Array<UserType>\n    count: number\n    totalUsersCount: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    followingInProgress: Array<number>\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n}\n\n\nconst Users = (props: UsersPropsType) => {\n\n    const usersJSX = props.users.map(u => (\n        <User\n            key={u.id}\n            user={u}\n            follow={props.follow}\n            unfollow={props.unfollow}\n            followingInProgress={props.followingInProgress}\n        />\n    ))\n\n    return (\n        <div>\n            <Paginator\n                count={props.count}\n                totalItemsCount={props.totalUsersCount}\n                currentPage={props.currentPage}\n                onPageChanged={props.onPageChanged}\n                portion={10}\n            />\n            {usersJSX}\n        </div>\n    );\n};\n\nexport default Users;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {AppStateType} from './redux-store';\nimport {createSelector} from 'reselect';\nimport {UserType} from './usersReducer';\n\nexport const getUsers = (state: AppStateType) => {\n    return state.usersPage.users\n}\n\nexport const getUsersSuperSelector = createSelector(getUsers, (users: Array<UserType>) => {\n    // return users.filter(u => true)\n    return users\n})\n\nexport const getCountUsersPerPage = (state: AppStateType) => {\n    return state.usersPage.count\n}\n\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state: AppStateType) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.usersPage.followingInProgress\n}","import {connect} from 'react-redux';\nimport {\n    // changeFollowStatusAC as changeFollowStatus,\n    // changeIsFetchingAC as changeIsFetching,\n    // setTotalUsersCountAC as setTotalUsersCount,\n    // setUsersAC as setUsers,\n    setUsersCurrentPageAC as setCurrentPage,\n    // changeFollowingInProgressAC as changeFollowingInProgress,\n    getUsersThunkCreator, followTC, unfollowTC,\n} from '../../redux/usersReducer';\nimport {AppStateType} from '../../redux/redux-store';\nimport React from 'react';\nimport Users from './Users';\nimport Preloader from '../Preloader/Preloader';\nimport {compose} from 'redux';\nimport WithAuthRedirect from '../../hoc/WithAuthRedirect';\nimport {\n    getCountUsersPerPage,\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getTotalUsersCount,\n    getUsersSuperSelector\n} from '../../redux/usersSelectors';\n\nclass UsersAPIComponent extends React.Component<UsersAPIPropsType> {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.count)\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber)\n        this.props.getUsers(pageNumber, this.props.count)\n    }\n\n    render() {\n        return (\n            <>\n                {this.props.isFetching\n                    ? <Preloader/>\n                    : <Users\n                        /*users={this.props.users}\n                        count={this.props.count}\n                        totalUsersCount={this.props.totalUsersCount}\n                        currentPage={this.props.currentPage}\n                        changeFollowStatus={this.props.changeFollowStatus}\n                        // onPageChanged={this.onPageChanged}\n                        followingInProgress={this.props.followingInProgress}\n                        changeFollowingInProgress={this.props.changeFollowingInProgress}\n                        follow={this.props.follow}\n                        unfollow={this.props.unfollow}*/\n                        {...this.props}\n                        onPageChanged={this.onPageChanged}\n                    />\n                }\n            </>\n        );\n    }\n}\n\n\n// UsersInitialStateType\n\n\nexport type MapStateToPropsType = ReturnType<typeof mapStateToProps>\nexport type MapDispatchToPropsType = ReturnType<typeof mapDispatchToProps>\nexport type UsersAPIPropsType = MapStateToPropsType & MapDispatchToPropsType\n\n\n/*const mapStateToProps = (state: AppStateType) => {\n    return {\n        users: state.usersPage.users,\n        count: state.usersPage.count,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}*/\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        users: getUsersSuperSelector(state),\n        count: getCountUsersPerPage(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\n/*const mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        setCurrentPage: (currentPage: number) => {\n            dispatch(setCurrentPage(currentPage))\n        },\n        getUsers: (currentPage: number, count: number) => {\n            getUsersThunkCreator(currentPage, count)(dispatch)\n        },\n        follow: (id: number) => {\n            followTC(id)(dispatch)\n        },\n        unfollow: (id: number) => {\n            unfollowTC(id)(dispatch)\n        }\n    }\n}\n\n// ??????? WHY ?????\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent);*/\n\n\nconst mapDispatchToProps = () => {\n    return {\n        setCurrentPage,\n        getUsers: getUsersThunkCreator,\n        follow: followTC,\n        unfollow: unfollowTC\n    }\n}\n\n// @ts-ignore ??????? WHY ?????\n// export default connect(mapStateToProps, mapDispatchToProps())(UsersAPIComponent);\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps()),\n    WithAuthRedirect\n)\n(UsersAPIComponent)","import React from 'react';\nimport {Navigate,} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../redux/redux-store';\n\nexport type MstpWithAuthRedirectType = ReturnType<typeof mstp>\nconst mstp = (state: AppStateType) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nconst WithAuthRedirect = (Component: React.ElementType) => {\n    // const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\n\n    const RedirectComponent = (props: MstpWithAuthRedirectType) => {\n        const {isAuth, ...rest} = props\n        if (!isAuth) return <Navigate to={'/login'}/>\n        return <Component {...rest}/>\n    }\n\n    return connect(mstp)(RedirectComponent)\n};\n\n\n/*const WithAuthRedirect = (Component: React.ElementType) => {\n    // const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\n\n    if (!isAuth) {\n        return <Navigate to={'/login'}/>\n    }\n\n    return (props: any) => <Component value={100500} {...props}/>;\n};*/\n\n\n/*let AuthRedirectComponent = (props: any) => {\n    if (!this.props.isAuth) {\n        return <Navigate to={'/login'}/>\n    }\n\n    return <ProfileContainer {...props} />\n}*/\n\n/*function withParams(Component: React.ElementType) {\n    return (props: any) => <Component {...props} params={useParams()}/>;\n}*/\n\nexport default WithAuthRedirect;"],"names":["count","totalItemsCount","currentPage","onPageChanged","portion","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","onClick","prev","filter","p","map","className","css","user","followingInProgress","follow","unfollow","to","id","src","photos","small","defaultAvatar","alt","disabled","some","followed","name","status","props","usersJSX","users","u","totalUsersCount","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsersSuperSelector","state","usersPage","getCountUsersPerPage","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersAPIComponent","pageNumber","setCurrentPage","getUsers","this","Preloader","React","compose","connect","getUsersThunkCreator","followTC","unfollowTC","WithAuthRedirect","mstp","isAuth","auth","Component","rest"],"sourceRoot":""}